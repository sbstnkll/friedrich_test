{"version":3,"sources":["components/hooks/usePost.js","components/hooks/useUser.js","components/providers/AppContext.js","components/inner components/Register.js","components/inner components/Logo.js","components/Header.js","components/inner components/Input.js","components/Comment.js","components/SinglePostContent.js","components/SinglePost.js","components/inner components/Feed.js","components/PopularPosts.js","components/inner components/Sidebar.js","components/Footer.js","components/Profil.js","components/inner components/Login.js","components/SingleFriendRequest.js","components/FriendRequests.js","components/EditProfil.js","components/hooks/useChat.js","components/WebsocketChatroom.js","components/DialogNewChatRoom.js","components/ChatSelection.js","App.js","index.js"],"names":["usePost","_useState","useState","_useState2","Object","slicedToArray","allPosts","setPost","_useState3","_useState4","searchTerm","setSearchTerm","_useState5","_useState6","filteredUserName","setfilteredUserName","useEffect","backend_LoadPosts","then","response","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","config","wrap","_context","prev","next","method","url","headers","axios","sent","console","log","abrupt","data","stop","apply","this","arguments","backend_AddPost","_ref2","_callee2","singlePost","_context2","Content-Type","_x","backend_UpdatePost","_ref3","_callee3","_context3","_x2","backend_DeletePost","_ref4","_callee4","_context4","_x3","backend_toggleLikeOfPost","_ref5","_callee5","myData","_context5","_x4","backend_filterPosts","_ref6","_callee6","json","_context6","userName","backend_getAllPostsOfUser","_ref7","_callee7","_context7","_x5","title","description","creator","today","Date","toISOString","slice","newPost","id","uuidv4","date","likedBy","comments","concat","toConsumableArray","idOfPost","postToBeDeleted","filter","e","JSON","stringify","commentText","newComment","updatedPost","map","postID","newTitle","newDesc","_ref8","_callee8","_context8","_x6","_ref9","_callee9","_context9","t0","t1","_ref10","_callee10","post","currentUser","_context10","_x7","_x8","useUser","allUsers","setAllUsers","setCurrentUser","backend_verifyWord","useUser_regeneratorRuntime","word","backend_uploadImg","aryData","backend_LoginIsPossible","userPW","password","backend_UserExists","backend_AddUser","singleUser","backend_updateMessageStatus","backend_sendNewMessage","newMessage","backend_loadChatVerlauf","_x9","backend_rejectFriendRequest","friendRequest","_x10","backend_sendFriendRequest","_x11","backend_acceptFriendRequest","_ref11","_callee11","_context11","_x12","loginUser","_ref12","_callee12","name","loggedInUser","_context12","undefined","_x13","_x14","_ref13","_callee13","newUser","_context13","registrationDate","friends","friendRequestsSent","friendRequestsRecieved","messages","beruf","sprachen","interests","beziehungsstatus","biografie","_x15","_x16","_ref14","_callee14","message","sendingUser","recievingUser","newFriendRequest","_context14","_x17","_x18","_x19","_ref15","_callee15","requestID","_context15","_x20","_ref16","_callee16","_context16","_x21","_ref17","_callee17","chatPartnerName","messageText","_context17","text","from","to","status","_x22","_x23","_ref18","_callee18","_context18","newStatus","imgFile","AppContext","createContext","useAppContext","useContext","AppContextProvider","children","_usePost","_usePost2","addPost","delPost","addComment","setNewPostTitle","setNewPostDescription","allPostsOfUser","updateFilterOfPosts","toggleLikeOfPost","_useUser","_useUser2","addUser","logoutUser","addFriendRequest","acceptFriendRequest","rejectFriendRequest","sendNewMessage","loadChatVerlauf","updateMessageStatus","uploadImg","verifyWord","react_default","a","createElement","Provider","value","Register","refUserName","useRef","refUserPW1","refUserPW2","_React$useState","React","_React$useState2","open","setOpen","_React$useState3","_React$useState4","openUserExists","setOpenUserExists","_React$useState5","_React$useState6","openUserCreated","setOpenUserCreated","handleClose","handleCloseUserExists","handleCloseUserCreated","addUserClicked","Register_regeneratorRuntime","answer","current","InputLabel","htmlFor","Input","size","inputRef","type","Button","sx","fontSize","className","variant","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Logo","Header","_useAppContext","inputRefSearchBar","anchorEl","setAnchorEl","Boolean","handleClick","event","currentTarget","searchChanged","Header_regeneratorRuntime","keys","length","react_router_dom","inner_components_Logo","TextField","label","onChange","Fragment","Box","display","alignItems","textAlign","Typography","minWidth","Tooltip","IconButton","ml","aria-controls","aria-haspopup","aria-expanded","Avatar","width","height","Menu","PaperProps","elevation","overflow","mt","& .MuiAvatar-root","mr","&:before","content","position","top","right","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","Divider","ListItemIcon","PersonAdd_default","ChatBubble_default","Settings_default","Logout_default","InputField","inputRefTitle","inputRefDescription","multiline","maxRows","Comment","comment","paragraph","ExpandMore","styled","props","expand","other","objectWithoutProperties","theme","marginLeft","transition","transitions","create","duration","shortest","SinglePostContent","expanded","setExpanded","liked","setLiked","inputRefComment","includes","likeIconClicked","SinglePostContent_regeneratorRuntime","m","pt","Card","maxWidth","CardHeader","avatar","key","red","aria-label","charAt","toUpperCase","action","MoreVert_default","MenuListProps","style","maxHeight","ITEM_HEIGHT","subheader","CardContent","color","CardActions","disableSpacing","Favorite_default","FavoriteBorder_default","Share_default","SinglePostContent_ExpandMore","ExpandMore_default","Collapse","in","timeout","unmountOnExit","user","components_Comment","SinglePost","useParams","paramPost","find","Feed","PopularPosts","sortedObjs","sort","b","topPosts","i","Sidebar","components_PopularPosts","Footer","Profil","friendRequestClicked","Profil_regeneratorRuntime","alredySentFriendRequest","alreadyRecievedFriendRequest","alreadyFriends","AngefragtBei","Anfragender","userMessage","Login","loginUserClicked","Login_regeneratorRuntime","SingleFriendRequest","AddTask_default","DoNotDisturb_default","FriendRequests","components_SingleFriendRequest","EditProfil","Set","selected","setSelected","selectedLang","setSelectedLang","users","setInterests","_React$useState7","_React$useState8","languagues","setLanguagues","refInterestInput","refLanguagueInput","_React$useState9","preview","_React$useState10","image","setImage","_React$useState11","_React$useState12","handleClickLanguage","newSet","has","delete","add","handleClickInterest","addInterest","EditProfil_regeneratorRuntime","found","newID","obj","toLowerCase","addLanguage","handleSubmit","formData","preventDefault","FormData","append","interest","Chip","Grid","container","padding","item","xs","fullWidth","align","Send_default","lang","src","onSubmit","img","URL","createObjectURL","target","files","lib","extensions","FileObject","file","newImg","useChat","roomId","setMessages","socketRef","backend_getPreviousMessages","useChat_regeneratorRuntime","roomID","socketIOClient","query","msgs","initMsgs","on","disconnect","sendMessage","messageBody","newMsg","senderID","emit","WebsocketChatroom","_useChat","inputRefMessage","List","msg","ListItem","ListItemText","primary","DialogNewChatRoom","refSaveGPSdata","_useGeolocated","useGeolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","coords","isGeolocationEnabled","isGeolocationAvailable","handleClickChip","info","react","autoFocus","margin","FormGroup","FormControlLabel","control","Switch","defaultChecked","latitude","longitude","Stack","TabPanel","index","assign","component","role","hidden","p","a11yProps","fabStyle","bottom","fabGreenStyle","green","&:hover","ChatSelection","useTheme","setValue","roomName","setRoomName","chatPartner","setChatPartner","transitionDuration","enter","enteringScreen","exit","leavingScreen","fabs","icon","Add_default","tooltip","Edit_default","objectSpread","KeyboardArrowUp_default","minHeight","AppBar","Tabs","newValue","indicatorColor","textColor","Tab","react_swipeable_views_lib_default","axis","direction","onChangeIndex","dir","button","friendshipt","fab","Zoom","transitionDelay","Fab","App","AppContext_AppContextProvider","rowSpacing","columnSpacing","irection","justifyContent","components_Header","sm","md","lg","react_router","path","element","inner_components_Feed","inner_components_Register","inner_components_Login","components_Profil","components_FriendRequests","components_WebsocketChatroom","components_EditProfil","inner_components_Sidebar","components_Footer","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.83ca611a.chunk.js","sourcesContent":["import { useState , useEffect} from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\n\n\nconst usePost=()=> {\n    const [allPosts ,setPost]=useState([]);\n    const [searchTerm ,setSearchTerm]=useState(\"\");\n    const [filteredUserName ,setfilteredUserName]=useState(\"\");\n\n    \n    useEffect( () => {     \n      backend_LoadPosts().then(\n          response => {                   \n            setPost(response);           \n        });            \n    }, []);\n    \n  \n\n    const  backend_LoadPosts = async () => {\n      var config = {\n        method: 'get',\n        url: '/api/post',\n        headers: { }\n      };\n      let response = await axios (config);\n      console.log(response);\n      return response.data;\n    }\n\n    const backend_AddPost = async (singlePost) =>{\n      var config = {\n        method: 'post',\n        url: '/api/post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: singlePost    \n      };\n      let response = await axios (config);\n      return response.data;\n    }\n    const backend_UpdatePost = async (singlePost) => {\n      var config = {\n        method: 'put',\n        url: '/api/post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: singlePost    \n      };\n      let response = await axios (config);\n      return response.data;\n    }\n  \n\n    const backend_DeletePost = async (singlePost) =>{\n      var config = {\n        method: 'delete',\n        url: '/api/post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: singlePost    \n      };\n      console.log (singlePost);\n      let response = await axios (config);\n      return response.data;\n    }\n    const backend_toggleLikeOfPost = async (myData) =>{\n      console.log(\"backend_toggleLikeOfPost\");\n      var config = {\n        method: 'put',\n        url: '/api/posts/toggleLikeOfPost',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: myData\n      };\n      let response = await axios (config);           \n      return response.data;    \n    }\n\n\n    const backend_filterPosts = async () => {\n      console.log(\"backend_filterPosts\");\n      const json = {\"searchTerm\": searchTerm,\n                    \"userName\": filteredUserName};\n      console.log(json);\n      var config = {\n        method: 'post',\n        url: '/api/posts/search',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: json\n      };\n      let response = await axios (config);    \n      console.log(response.data)  \n      return response.data;    \n    }\n    const backend_getAllPostsOfUser = async (userName) => {\n      const json = {\"userName\": userName};\n        var config = {\n          method: 'post',\n          url: '/api/posts/allPostsOfUser',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: json\n        };\n        let response = await axios (config);    \n        console.log(response.data)  \n        return response.data;    \n    }\n    const allPostsOfUser = async (userName) => {\n      console.log(\"postsOfUser - start: \" + userName);\n      if (userName !==\"\"){\n        return await backend_getAllPostsOfUser(userName);\n      }\n    }\n\n    function addPost (title, description, creator) {\n        if (title !==\"\" && creator !== \"\"){\n          let today = new Date().toISOString().slice(0, 10);\n          let newPost = {id:uuidv4(), creator: creator, title: title, description: description, date: today, likedBy:[], comments: []};\n          console.log(newPost);\n          setPost ([...allPosts, newPost]);\n          let response = backend_AddPost(newPost);\n          console.log(response);\n        }\n      }\n\n    function addComment(idOfPost, commentText, userName){\n      let today = new Date().toISOString().slice(0, 10);\n      let newComment = {id:uuidv4(), commentText:commentText , userName: userName, date: today}\n      let updatedPost = allPosts.filter((e) => e.id === idOfPost)[0]\n      setPost(allPosts => allPosts.map(e => { if (e.id === idOfPost) e.comments = [...e.comments, newComment]; return e }));\n      console.log(updatedPost);\n      backend_UpdatePost(updatedPost)\n    }\n\n      function delPost (idOfPost) {\n        let postToBeDeleted = allPosts.filter((e) => e.id === idOfPost)[0];\n        console.log(\"delPost\" + JSON.stringify(postToBeDeleted));\n        setPost(allPosts.filter((e) => e.id !== idOfPost));   \n        backend_DeletePost(postToBeDeleted);\n      }\n    \n    function setNewPostTitle (postID, newTitle) {\n        if (newTitle !==\"\"){\n          setPost(allPosts => allPosts.map(e => { if (e.id === postID) e.title = newTitle; return e }));\n          console.log(allPosts)\n        }\n      }\n\n      function setNewPostDescription (postID, newDesc) {\n        if (newDesc !==\"\"){ \n          setPost(allPosts => allPosts.map(e => { if (e.id === postID) e.description = newDesc; return e }));\n          console.log(allPosts)\n        }\n      }\n    \n      const updateFilterOfPosts= async () => {\n        console.log(\"filterPosts - start: \");\n        console.log(searchTerm);\n        console.log(filteredUserName);\n        setPost( await backend_filterPosts());\n        \n      }\n      const toggleLikeOfPost= async (post, currentUser)=>{\n        let newPost =  await backend_toggleLikeOfPost([post, currentUser]);\n        console.log(newPost);\n        return newPost;\n      }\n\n    return [allPosts, setPost, addPost,delPost, addComment, \n            setNewPostTitle, setNewPostDescription, allPostsOfUser,\n             updateFilterOfPosts, setSearchTerm, setfilteredUserName, \n             filteredUserName, searchTerm, toggleLikeOfPost]\n    \n}\n\nexport default usePost;","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\n\n\nconst useUser=()=> {\n    \n    const [allUsers ,setAllUsers]=useState([]);\n    const [currentUser ,setCurrentUser]=useState({});\n\n\n    const backend_verifyWord = async (word)=> {\n      var config = {\n        method: 'put',\n        url: '/api/WordExisits',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: word\n      };\n      let response = await axios (config);    \n      console.log(response.data)  \n      return response.data;      \n    }\n\n    const backend_uploadImg = async (aryData) => {\n      console.log(\"backend_uploadImg\");\n      console.log(aryData)\n      var config = {\n        method: 'post',\n        url: '/api/upload',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: aryData\n      };\n      let response = await axios (config);    \n      console.log(response.data)  \n      return response.data;      \n  }\n    const backend_LoginIsPossible = async (userName, userPW) => {\n        const json = {\"userName\": userName,\n                      \"password\": userPW};\n        var config = {\n          method: 'post',\n          url: '/api/loginIsPossible',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: json\n        };\n        let response = await axios (config);    \n        console.log(response.data)  \n        return response.data;      \n    }\n\n\n    const backend_UserExists = async (userName) => {\n      const json = {\"userName\": userName};\n      var config = {\n        method: 'post',\n        url: '/api/userExists',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: json\n      };\n      let response = await axios (config);      \n      return response.data;\n    }\n\n    const backend_AddUser = async (singleUser) =>{\n      var config = {\n        method: 'post',\n        url: '/api/user',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: singleUser    \n      };\n      let response = await axios (config);\n      return response.data;\n    }\n\n    const backend_updateMessageStatus = async (myData) => {\n      var config = {\n        method: 'put',\n        url: '/api/updateMessageStatus',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: myData    \n      };\n      let response = await axios (config);\n      return response.data;\n    }\n\n    const backend_sendNewMessage = async (newMessage) => {\n      var config = {\n        method: 'put',\n        url: '/api/newMessage',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: newMessage    \n      };\n      let response = await axios (config);\n      return response.data;\n    }\n    const backend_loadChatVerlauf = async (currentUser) => {\n      var config = {\n        method: 'put',\n        url: '/api/allMessages',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: currentUser    \n      };\n      let response = await axios (config);\n      return response.data;\n    }\n    \n    const backend_rejectFriendRequest  = async (friendRequest)=>{\n      var config = {\n        method: 'post',\n        url: '/api/rejectFriendRequest',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: friendRequest    \n      };\n      let response = await axios (config);\n      return response.data;\n    }\n\n    \n    const backend_sendFriendRequest= async (friendRequest) =>{\n      var config = {\n        method: 'post',\n        url: '/api/friendRequest',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: friendRequest    \n      };\n      let response = await axios (config);\n      return response.data;\n    }\n\n\n    const backend_acceptFriendRequest= async (friendRequest) =>{\n      var config = {\n        method: 'put',\n        url: '/api/acceptFriendRequest',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: friendRequest    \n      };\n      let response = await axios (config);\n      return response.data;\n    }\n\n    const loginUser =async (name, userPW) => {\n      let loggedInUser = await backend_LoginIsPossible(name, userPW)\n      if (loggedInUser !== undefined){\n        setCurrentUser(loggedInUser);\n        return \"Login erfolgreich\";\n      }else{\n        return \"Fehlerhafte Login Daten\";\n      }\n        \n    }\n    const logoutUser = () => {\n      setCurrentUser({});\n    }\n    \n\n\n    const  addUser = async (userName, userPW) =>{\n      console.log(userName);\n      if (userName !==\"\" && userPW !== \"\"){\n\n          ///  Überprüfung einfügen, ob der Nutzer bereits exisitiert\n          if (! await backend_UserExists(userName)){\n            console.log(\"lege neuen Nutzer an\");\n            let today = new Date().toISOString().slice(0, 10);\n            let newUser = {id: uuidv4(), userName: userName, password: userPW, registrationDate: today,  \n                          friends:[], friendRequestsSent:[], friendRequestsRecieved: [],\n                          messages:[], beruf: \"\", sprachen:[], interests:[],beziehungsstatus:\"\", biografie:\"\"};\n            backend_AddUser(newUser);\n            setAllUsers ([...allUsers, currentUser]);    \n            loginUser(userName, userPW) \n            console.log (newUser);\n            \n            return \"Nutzer erfolgreich angelegt\";\n          }else  {\n            return \"Nutzer existiert bereits\";\n          }\n          \n        }\n      }\n\n\n      const addFriendRequest = async (message, sendingUser, recievingUser) =>{\n        console.log(\"addFriendRequest\");\n        let today = new Date();\n        let newFriendRequest = {id:uuidv4(), message:message , sendingUser: sendingUser, recievingUser:recievingUser, date: today}\n        console.log(newFriendRequest);\n        \n        setCurrentUser(await backend_sendFriendRequest(newFriendRequest));        \n      }\n      const acceptFriendRequest= async (requestID)=>{   \n          setCurrentUser(await backend_acceptFriendRequest([currentUser,requestID])); \n          console.log(currentUser);  \n      }\n\n      const rejectFriendRequest = async (requestID)=> {\n          setCurrentUser(await backend_rejectFriendRequest([currentUser,requestID])); \n      }\n\n\n\n      const sendNewMessage = async (chatPartnerName, messageText) => {\n          let today = new Date();\n          let newMessage= {\n            id: uuidv4(),\n            date: today,\n            text: messageText,\n            from: currentUser.userName,\n            to: chatPartnerName,\n            status: 0\n         } \n         return await backend_sendNewMessage(newMessage);\n      }\n\n      const loadChatVerlauf = async () => {\n\n       return await backend_loadChatVerlauf(currentUser);\n      }\n\n      const updateMessageStatus = (messages, newStatus) => {\n          return backend_updateMessageStatus ([messages, newStatus])\n      }\n\n\n      const uploadImg=(imgFile) => {\n        console.log(\"uploadImg\");\n        console.log(imgFile);\n\n        //imgFile.filename = currentUser.id + \"&\" + imgFile.filename\n        return backend_uploadImg (imgFile)\n      }\n\n      const verifyWord =(word) => {\n        return backend_verifyWord ({word: word});\n      }\n      return [addUser, loginUser, logoutUser, currentUser, addFriendRequest, \n              acceptFriendRequest,rejectFriendRequest, sendNewMessage, loadChatVerlauf, \n              updateMessageStatus, uploadImg, verifyWord];\n  \n}\n\nexport default useUser;","import React  from 'react';\nimport { createContext, useContext } from \"react\";\nimport usePost from \"../hooks/usePost\";\nimport useUser from \"../hooks/useUser\";\n\n\nconst AppContext=createContext()\n\nconst useAppContext = () => useContext(AppContext);\n\nconst AppContextProvider = ({ children }) => {\n  const [allPosts, setPost, addPost,delPost, addComment, \n        setNewPostTitle, setNewPostDescription, allPostsOfUser,\n        updateFilterOfPosts, setSearchTerm, setfilteredUserName,\n        filteredUserName, searchTerm, toggleLikeOfPost] = usePost();\n\n  const [addUser, loginUser, logoutUser, currentUser,\n         addFriendRequest, acceptFriendRequest, rejectFriendRequest, \n         sendNewMessage, loadChatVerlauf, updateMessageStatus, uploadImg, verifyWord] = useUser();\n\n  return (\n    <AppContext.Provider value={{allPosts, setPost, addPost, delPost,  \n                          updateFilterOfPosts, setSearchTerm, setfilteredUserName,\n                          addComment, setNewPostTitle, setNewPostDescription, allPostsOfUser,toggleLikeOfPost,\n                          addUser, loginUser, logoutUser, currentUser, \n                          addFriendRequest, acceptFriendRequest, rejectFriendRequest, \n                          filteredUserName, searchTerm, sendNewMessage, loadChatVerlauf, updateMessageStatus,\n                          uploadImg, verifyWord}}>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nexport {AppContextProvider, useAppContext}","\nimport React, { useRef } from 'react';\nimport Button from '@mui/material/Button'\nimport { Input } from '@mui/material';\nimport { InputLabel } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useAppContext } from '../providers/AppContext';\n\n\n\nfunction Register() {\n\nconst refUserName = useRef();\nconst refUserPW1 = useRef();\nconst refUserPW2 = useRef();\n\nconst {addUser}=useAppContext();\n\nconst [open, setOpen] = React.useState(false);\nconst [openUserExists, setOpenUserExists] = React.useState(false);\nconst [openUserCreated, setOpenUserCreated] = React.useState(false);\n\n\nconst handleClose = () => {\n  setOpen(false);\n};\nconst handleCloseUserExists = () => {\n  setOpenUserExists(false);\n};\nconst handleCloseUserCreated = () => {\n  setOpenUserCreated(false);\n};\n\n\n\n\n\n\n\nconst addUserClicked = async () => {\n  \n  if(refUserPW1.current.value !== refUserPW2.current.value){  \n    setOpen(true);\n  }else if (refUserName.current.value !== \"\"){\n    console.log(\"addUserClicked\");\n    let answer = await addUser(refUserName.current.value, refUserPW1.current.value);\n    console.log(answer);\n    if (answer === \"Nutzer existiert bereits\"){\n      setOpenUserExists(true);\n    }else{   \n      setOpenUserCreated(true);\n    }\n  }\n}\n  return (\n    <div>\n      <InputLabel htmlFor=\"input-with-icon-adornment\">\n        Nutzername\n      </InputLabel>\n      <Input size=\"small\" id=\"userName\"  inputRef={refUserName}>  </Input>\n      <InputLabel htmlFor=\"input-with-icon-adornment\">\n        Passwort\n      </InputLabel>\n      <Input size=\"small\" id=\"passwort1\"  inputRef={refUserPW1} type=\"password\">  </Input>\n      <InputLabel htmlFor=\"input-with-icon-adornment\">\n        Passwort bestätigen\n      </InputLabel>\n      <Input size=\"small\" id=\"passwort2\"  inputRef={refUserPW2}  type=\"password\">  </Input>\n\n      <Button sx={{fontSize: 8}} className=\"sendButton\" variant=\"contained\" onClick={addUserClicked}>Nutzer registrieren</Button>\n    \n\n        \n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Fehlerhafte Passwort Eingabe\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n            Eingegebene Passwörter stimmen nicht überein, bitte überprüfen Sie Ihre Eingabe.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>OK</Button>        \n          </DialogActions>\n        </Dialog>\n\n\n        <Dialog\n          open={openUserExists}\n          onClose={handleCloseUserExists}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Nutzer existiert bereits\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n            Der eingegebene Nutzername exisitert bereits. Bitte geben Sie einen anderen Username ein.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseUserExists}>OK</Button>        \n          </DialogActions>\n        </Dialog>\n\n\n        <Dialog\n          open={openUserCreated}\n          onClose={handleCloseUserCreated}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Nutzer erfolgreich angelegt\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n            Der eingegebene Nutzer wurde erfolgreich angelegt.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseUserCreated}>OK</Button>        \n          </DialogActions>\n        </Dialog>\n    </div>\n  )\n}\n\nexport default Register","import React from 'react'\n\nfunction Logo() {\n  return (\n    <div>logo</div>\n  )\n}\n\nexport default Logo","import React, {useRef, useEffect} from 'react'\nimport Logo from './inner components/Logo'\nimport { Link } from \"react-router-dom\";\n\n\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport PersonAdd from '@mui/icons-material/PersonAdd';\nimport Settings from '@mui/icons-material/Settings';\nimport Logout from '@mui/icons-material/Logout';\nimport { useAppContext } from './providers/AppContext';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport TextField from '@mui/material/TextField';\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\n\n\nfunction Header() {\n  const {logoutUser, currentUser, updateFilterOfPosts, setSearchTerm, searchTerm}=useAppContext();\n  const inputRefSearchBar=useRef (null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  useEffect( () => {     \n    updateFilterOfPosts();             \n  }, [searchTerm]);\n\n\n\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n    \n\n  \n  const searchChanged = async () => {\n    console.log(\"searchChanged\")\n    console.log(inputRefSearchBar.current.value)\n \n    setSearchTerm(inputRefSearchBar.current.value);\n      \n   \n  }\n\n  if (Object.keys(currentUser).length === 0){\n    return (\n      <div className=\"Header\">\n         <Link to=\"/\">\n          <Logo></Logo>\n         </Link>\n         <TextField id=\"outlined-basic\" label=\"Suche\" variant=\"outlined\" \n                    onChange={searchChanged} inputRef={inputRefSearchBar} />\n         <React.Fragment>\n        <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\n          <Typography sx={{ minWidth: 100 }}>Contact</Typography>\n          <Typography sx={{ minWidth: 100 }}>Profile</Typography>\n          <Tooltip title=\"Login / Registrieren\">\n            <IconButton\n              onClick={handleClick}\n              size=\"small\"\n              sx={{ ml: 2 }}\n              aria-controls={open ? 'account-menu' : undefined}\n              aria-haspopup=\"true\"\n              aria-expanded={open ? 'true' : undefined}\n            >\n              <Avatar sx={{ width: 32, height: 32 }}>M</Avatar>\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Menu\n          anchorEl={anchorEl}\n          id=\"account-menu\"\n          open={open}\n          onClose={handleClose}\n          onClick={handleClose}\n          PaperProps={{\n            elevation: 0,\n            sx: {\n              overflow: 'visible',\n              filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n              mt: 1.5,\n              '& .MuiAvatar-root': {\n                width: 32,\n                height: 32,\n                ml: -0.5,\n                mr: 1,\n              },\n              '&:before': {\n                content: '\"\"',\n                display: 'block',\n                position: 'absolute',\n                top: 0,\n                right: 14,\n                width: 10,\n                height: 10,\n                bgcolor: 'background.paper',\n                transform: 'translateY(-50%) rotate(45deg)',\n                zIndex: 0,\n              },\n            },\n          }}\n          transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n          anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n        >\n          <Link to=\"/login\">\n            <MenuItem>\n              <Avatar /> Login \n            </MenuItem>\n          </Link>\n          <Divider />\n          \n          <Link to=\"/register\">\n            <MenuItem>          \n              <ListItemIcon>\n                <PersonAdd fontSize=\"small\" />\n              </ListItemIcon>\n              Registrieren\n            </MenuItem>\n          </Link>          \n        </Menu>\n      </React.Fragment>\n      </div>\n  )\n  }\n  else{\n    // User is logged in\n    return (\n      <div className=\"Header\">\n         <Link to=\"/\">\n          <Logo></Logo>\n         </Link>\n  \n         <TextField id=\"outlined-basic\" label=\"Suche\" variant=\"outlined\" \n                    onChange={searchChanged} inputRef={inputRefSearchBar} />\n\n\n         <React.Fragment>\n        <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\n          <Link to=\"/chat\">\n            <Tooltip title=\"Chat\">             \n                <ChatBubbleIcon />         \n            </Tooltip>\n          </Link>\n          <Tooltip title=\"Nutzername\">             \n              <Typography sx={{ minWidth: 100 }}>{currentUser.userName}</Typography>              \n          </Tooltip>\n          <Tooltip title=\"Freundschaftsanfragen\">\n            <Link to=\"/freundschaftsanfragen\">\n              <PersonAddIcon /> \n              <Typography sx={{ minWidth: 100 }}>{currentUser.friendRequestsRecieved.length}</Typography>\n            </Link>\n            \n          </Tooltip>\n          <Tooltip title=\"Account settings\">\n            <IconButton\n              onClick={handleClick}\n              size=\"small\"\n              sx={{ ml: 2 }}\n              aria-controls={open ? 'account-menu' : undefined}\n              aria-haspopup=\"true\"\n              aria-expanded={open ? 'true' : undefined}\n            >\n              <Avatar sx={{ width: 32, height: 32 }}></Avatar>\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Menu\n          anchorEl={anchorEl}\n          id=\"account-menu\"\n          open={open}\n          onClose={handleClose}\n          onClick={handleClose}\n          PaperProps={{\n            elevation: 0,\n            sx: {\n              overflow: 'visible',\n              filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n              mt: 1.5,\n              '& .MuiAvatar-root': {\n                width: 32,\n                height: 32,\n                ml: -0.5,\n                mr: 1,\n              },\n              '&:before': {\n                content: '\"\"',\n                display: 'block',\n                position: 'absolute',\n                top: 0,\n                right: 14,\n                width: 10,\n                height: 10,\n                bgcolor: 'background.paper',\n                transform: 'translateY(-50%) rotate(45deg)',\n                zIndex: 0,\n              },\n            },\n          }}\n          transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n          anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n        >\n          <Link to =\"/editProfil\">\n            <MenuItem>\n              <Avatar /> Profile\n            </MenuItem>\n          </Link>\n          <Divider />\n          \n          \n          <MenuItem>\n            <ListItemIcon>\n              <Settings fontSize=\"small\" />\n            </ListItemIcon>\n            Settings\n          </MenuItem>\n          <Link to=\"/\">\n            <MenuItem onClick={logoutUser}>\n              <ListItemIcon>\n                <Logout fontSize=\"small\" />\n              </ListItemIcon>\n              Logout\n            </MenuItem>\n          </Link>\n        </Menu>\n      </React.Fragment>\n      </div>\n  );\n  }\n  \n\n\n\n   \n}\n\nexport default Header","import React, { useRef } from 'react';\nimport Button from '@mui/material/Button'\nimport { Input } from '@mui/material';\nimport { InputLabel } from '@mui/material';\n\nimport { useAppContext } from '../providers/AppContext';\n\nexport default function InputField() {\n\n  \n  const inputRefTitle=useRef (null);\n  const inputRefDescription=useRef (null);\n  const {addPost, currentUser}=useAppContext();\n\n \n \n\n  const addCommit= () =>{\n    addPost(inputRefTitle.current.value,inputRefDescription.current.value , currentUser.userName);\n  }\n\n\n\n\n  if (Object.keys(currentUser).length !== 0){\n    // Posten können nur eingeloggte Nutzer \n    return (\n      <div className=\"Input\">\n        <div>\n          <InputLabel htmlFor=\"input-with-icon-adornment\">\n            Titel\n          </InputLabel>\n          <Input size=\"small\" id=\"filled-basic\"  inputRef={inputRefTitle}>  </Input>\n          \n          <InputLabel htmlFor=\"input-with-icon-adornment\">\n            Beschreibung\n          </InputLabel>\n          <Input size=\"big\" id=\"outlined-multiline-flexible\"\n            label=\"Multiline\"\n            multiline\n            maxRows={4}\n            inputRef={inputRefDescription}>\n          </Input>\n        </div>\n        \n        <Button sx={{fontSize: 8}} className=\"sendButton\" variant=\"contained\" onClick={addCommit}>Commit</Button>\n      </div>\n    )\n}\n}","import React from 'react'\nimport Typography from '@mui/material/Typography';\n\n\nfunction Comment({comment}) {\n  return (\n    <div>\n        <Typography paragraph>\n            {comment.userName}  {comment.date} \n        </Typography>\n        <Typography paragraph>\n            {comment.commentText}\n        </Typography>\n    </div>\n  )\n}\n\nexport default Comment","import React, { useRef , useEffect} from 'react';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport Box from '@mui/material/Box';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { red } from '@mui/material/colors';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useAppContext } from './providers/AppContext';\nimport Button from '@mui/material/Button'\nimport { Input } from '@mui/material';\nimport { Link } from \"react-router-dom\";\nimport Comment from \"./Comment\";\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\n\n\nconst ExpandMore = styled((props) => {\n    const { expand, ...other } = props;\n    return <IconButton {...other} />;\n  })(({ theme, expand }) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  }));\n  \n  \n  \n  const ITEM_HEIGHT = 48;\n\nconst SinglePostContent = ({post}) => {\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [liked, setLiked] = React.useState(false);\n    const {delPost, addComment, currentUser, \n            toggleLikeOfPost, allPosts, setPost}=useAppContext();\n    const inputRefComment=useRef (null);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    useEffect( () => {         \n      if (post.likedBy.includes(currentUser.userName))\n          setLiked(true);\n        else\n          setLiked(false);       \n      }, []);\n    useEffect( () => {     \n      if (post.likedBy.includes(currentUser.userName))\n          setLiked(true);\n        else\n          setLiked(false);       \n      }, [allPosts]);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n      };\n    \n      \n      const toggleEditMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n      };\n\n      const closePostMenu = () => {\n        setAnchorEl(null);\n      };\n    \n      const editPostClicked = () => {\n        console.log(\"Editieren\");\n        setAnchorEl(null);\n      };\n    \n    \n      const delPostClicked = () => {\n        delPost(post.id);\n        setAnchorEl(null);\n      };\n    \n    \n      const addCommentClicked = ( ) => {\n        console.log(\"addCommentClicked\");\n        if (inputRefComment.current !== null){\n          let user = currentUser.userName;\n          if (user === \"\"){\n            user = \"Gast\";\n          }                \n          addComment(post.id, inputRefComment.current.value, user);         \n          inputRefComment.current.value = \"\";\n        }\n       \n      }\n\n      \n\n      const likeIconClicked= async ()=>{\n        post = await toggleLikeOfPost(post, currentUser); \n        // Aktualisieren aller Posts entsprechend der neuen Daten\n        // Ziel ist, dass der neue Status über alle Ebenen verfügbar ist        \n        setPost(allPosts => allPosts.map(e => { if (e.id === post.id) e.likedBy = post.likedBy; return e }));\n     \n      }\n    return (\n    <Box  m={2} pt={3}>\n        <Card sx={{ maxWidth: 345 }} >\n          <CardHeader\n            avatar={\n              <Link to={`/profil/${post.creator}`} key={post.creator} >\n                <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">                           \n                    {post.creator.charAt(0).toUpperCase() \n                    }               \n                </Avatar>\n              </Link>\n            }\n            \n            action={\n              currentUser.userName === post.creator ?\n              <div>\n              <IconButton \n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls={open ? 'long-menu' : undefined}\n                aria-expanded={open ? 'true' : undefined}\n                aria-haspopup=\"true\"\n                onClick={toggleEditMenu}>                  \n                <MoreVertIcon />\n              </IconButton> \n              <Menu\n                id=\"long-menu\"\n                MenuListProps={{\n                  'aria-labelledby': 'long-button',\n                }}\n                anchorEl={anchorEl}\n                open={open}\n                onClose={closePostMenu}\n                PaperProps={{\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: '20ch',\n                  },\n                }}\n              >\n\n                <MenuItem key=\"editPost\" onClick={editPostClicked}>Editieren</MenuItem>\n                <MenuItem key=\"deletePost\" onClick={delPostClicked}>Löschen</MenuItem>\n   \n              </Menu>\n              \n            </div>\n            : null\n          }\n            \n            title= {\n              <Link to={`/post/${post.id}`} key={post.id} > \n                {post.title}\n              </Link>\n             }\n            \n            subheader={ post.creator + \" am \" + post.date}\n               \n          />\n          \n          <CardContent>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n            {post.description}\n            \n            </Typography>\n          </CardContent>\n          <CardActions disableSpacing>\n            {\n               Object.keys(currentUser).length > 0 ?\n                <IconButton aria-label=\"add to favorites\" onClick={likeIconClicked}>\n                  {liked === true ? <div><FavoriteIcon /> {post.likedBy.length}</div>: <div><FavoriteBorderIcon />{post.likedBy.length}</div>}\n                </IconButton>\n              : <div>likes: {post.likedBy.length}</div>\n            }\n           \n            <IconButton aria-label=\"share\">\n              <ShareIcon />\n            </IconButton>\n            <ExpandMore\n              expand={expanded}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show Comments\"\n            >\n              <ExpandMoreIcon />\n            </ExpandMore>\n          </CardActions>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n                \n            <Input size=\"big\" id=  { \"InputForComments_\" + post.id}\n              label=\"comments\"\n              multiline\n              maxRows={4}\n              inputRef={inputRefComment}>\n            </Input>\n        \n        \n            <Button sx={{fontSize: 8}} className=\"sendButton\" variant=\"contained\" onClick={addCommentClicked}>Kommentieren</Button>\n              {\n              post.comments.map(e => <Comment  key={e.id} comment={e}/> )\n              }\n              \n              \n            </CardContent>\n          </Collapse>\n        </Card>\n      </Box>\n    );\n}\n\nexport default SinglePostContent;","import { useAppContext } from './providers/AppContext';\nimport { useParams } from \"react-router-dom\";\nimport SinglePostContent from \"./SinglePostContent\";\n\n\n\nexport default function SinglePost({post}) {\n  const {allPosts}=useAppContext();\n \n  const { postID } = useParams();\n  const paramPost = allPosts.find(e => e.id === postID);\n  \n  if (post){\n    return (SinglePostContent ({post}));\n  }else if (paramPost){\n    let post = paramPost\n    return (SinglePostContent ({post}));\n  }\n\n}","import React, {useEffect} from 'react'\nimport InputField from './Input'\nimport SinglePost from '../SinglePost'\nimport { useAppContext } from '../providers/AppContext';\n\n\nfunction Feed() {\n  const {allPosts, setfilteredUserName, filteredUserName, updateFilterOfPosts}=useAppContext();\n\n  // Filter des UserNames löschen\n  useEffect( () => {     \n      setfilteredUserName(\"\");        \n  }, []);\n\n  useEffect( () => {\n      updateFilterOfPosts();\n  }, [filteredUserName]);\n\n  return (\n    <div className=\"Feed\">\n      <div>\n        {}\n        <InputField/>\n\n        {\n        allPosts.map(e => <SinglePost  key={e.id} post={e} /> )\n        }\n        \n      </div>\n    </div>\n  )\n}\n\nexport default Feed","import React from 'react'\nimport { useAppContext } from './providers/AppContext';\nimport SingleFriend from './SingleFriend';\nimport SinglePost from './SinglePost';\n\nfunction PopularPosts() {\n\n    const { allPosts}=useAppContext(); \n    \n    let sortedObjs = allPosts.sort((a, b) => a.likedBy.length + a.comments.length< b.likedBy.length + b.comments.length? 1 : -1);\n    console.log(\"PopularPosts\");\n    console.log(sortedObjs);\n    let length = 3\n    if (sortedObjs.length < length){\n        length = sortedObjs.length\n    }\n    let topPosts = [];\n    for (var i = 0; i < length; i++) {\n        topPosts = [...topPosts, sortedObjs[i]]\n    }\n\n    if (Object.keys(allPosts).length !== 0){\n        return (\n        <div>\n            <div>\n                beliebte Posts\n            </div>\n            <div>\n                {\n                   topPosts.map((e) => <SinglePost key={e.id}  post={e} />)\n                    //currentUser.friends.map((e) => <SingleFriend key={e.id}  friend={e} />)\n                }\n            </div>\n        </div>\n    );\n    }\n}\n\nexport default PopularPosts","import React from 'react'\nimport Friends from '../Friends'\nimport PopularPosts from '../PopularPosts'\n\nfunction Sidebar() {\n  return (\n    <div className=\"Sidebar\">\n      <PopularPosts />\n    </div>\n  )\n}\n\nexport default Sidebar","import React from 'react'\n\nfunction Footer() {\n  return (\n    <div className=\"Footer\">Test überarbeitung :)</div>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport { useState, useEffect} from \"react\";\nimport SinglePost from './SinglePost'\nimport { useParams } from \"react-router-dom\";\nimport { useAppContext } from './providers/AppContext';\nimport Button from '@mui/material/Button'\n\nconst  Profil = () => {\n\n    \n    const {userName} = useParams();\n    \n    const {updateFilterOfPosts, addFriendRequest, currentUser, allPosts, setfilteredUserName, filteredUserName}=useAppContext(); \n    console.log(\"Profil: username from useParams: \" + userName)\n    useEffect( () => {     \n        setfilteredUserName(userName);        \n    }, []);\n\n    useEffect( () => {\n        updateFilterOfPosts();\n    }, [filteredUserName]);\n\n    const friendRequestClicked= async () => {\n        console.log(\"friendRequestClicked\");\n        await addFriendRequest(\"Hi, ich wäre gerne dein Freund:in :)\" ,  currentUser.userName, userName );\n        console.log(currentUser);\n    }\n    let alredySentFriendRequest = false;\n    let alreadyRecievedFriendRequest = false;\n    let alreadyFriends = false;\n    console.log(currentUser);\n\n    if (currentUser !== null){\n        if (currentUser.friends !== undefined){\n            if (currentUser.friends.filter(e => e.userName === userName).length > 0) {            \n                alreadyFriends = true;\n             }\n        }\n        if (currentUser.friendRequestsSent !== undefined){\n            if (currentUser.friendRequestsSent.filter(e => e.AngefragtBei === userName).length > 0) {            \n                alredySentFriendRequest = true;\n             }\n        }\n        if (currentUser.friendRequestsRecieved !== undefined){\n            if (currentUser.friendRequestsRecieved.filter(e => e.Anfragender === userName).length > 0) {            \n                alreadyRecievedFriendRequest = true;\n             }\n        }\n        \n    }\n    let userMessage = \"\"\n    if (alreadyFriends)\n        userMessage= \"Bereits befreundet\";\n    else if (alredySentFriendRequest)\n         userMessage = \"Anfrage bereits gesendet\";\n    else if (alreadyRecievedFriendRequest)\n         userMessage = \"Bereits eine freundschaftsanfrage erhalten\";\n     \n    console.log (userMessage);\n    return (\n            <div> {userName}\n            {currentUser.userName!== undefined && currentUser.userName !== userName\n            &&  userMessage === \"\"\n            ? \n            // Nutzer ist eingeloggt und aktuell angezeigter Nutzer ist ein anderer Account\n\n                <Button sx={{fontSize: 8}} className=\"sendButton\" variant=\"contained\" \n                        onClick={friendRequestClicked}>Freundschaftsanfrage senden</Button>\n            : userMessage \n             }\n             \n                {   \n                allPosts.map(e => <SinglePost key={e.id} post={e} />)\n                }\n            </div>);\n   \n}\n\nexport default Profil;","import React, { useRef } from 'react';\nimport { Input } from '@mui/material';\nimport { InputLabel } from '@mui/material';\nimport Button from '@mui/material/Button'\nimport { useAppContext } from '../providers/AppContext';\n\n\nfunction Login() {\n  \nconst refUserName = useRef();\nconst refUserPW1 = useRef();\n\nconst {loginUser}=useAppContext();\n\nconst loginUserClicked = async () => {\n  let answer = await loginUser(refUserName.current.value,refUserPW1.current.value );\n  console.log(answer);\n}\n\n\n  return (\n    <div>\n      <InputLabel htmlFor=\"input-with-icon-adornment\">\n        Nutzername\n      </InputLabel>\n      <Input size=\"small\" id=\"userName\"  inputRef={refUserName}>  </Input>\n      <InputLabel htmlFor=\"input-with-icon-adornment\">\n        Passwort\n      </InputLabel>\n      <Input size=\"small\" id=\"passwort1\"  inputRef={refUserPW1} type=\"password\">  </Input>\n\n      <Button sx={{fontSize: 8}} className=\"sendButton\" variant=\"contained\" onClick={loginUserClicked}>Einloggen</Button>\n    \n    </div>\n  )\n}\n\nexport default Login","import React  from 'react';\nimport Card from '@mui/material/Card';\nimport Box from '@mui/material/Box';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { red } from '@mui/material/colors';\n\nimport AddTaskIcon from '@mui/icons-material/AddTask';\n\nimport DoNotDisturbIcon from '@mui/icons-material/DoNotDisturb';\nimport { useAppContext } from './providers/AppContext';  \n  \n  \n  const ITEM_HEIGHT = 48;\n\nconst SingleFriendRequest = ({friendRequest}) => {\n    const {acceptFriendRequest, rejectFriendRequest}=useAppContext(); \n    \n    const acceptFriendRequestClicked =() =>{\n        acceptFriendRequest (friendRequest.id);\n    }\n\n    const rejectFriendRequestClicked = () => {\n        rejectFriendRequest(friendRequest.id);\n    }\n\n    console.log(friendRequest);\n    \n    return (\n    <Box  m={2} pt={3}>\n        <Card sx={{ maxWidth: 345 }} >\n          <CardHeader\n            avatar={\n                <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">                           \n                    {friendRequest.Anfragender.charAt(0).toUpperCase() }     \n                </Avatar>      \n            }\n            title= {friendRequest.Anfragender}\n            subheader= {friendRequest.date}\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n             {friendRequest.message}\n            </Typography>\n          </CardContent>\n          <CardActions disableSpacing>\n            <IconButton aria-label=\"add to favorites\" onClick={acceptFriendRequestClicked} >\n              <AddTaskIcon />\n            </IconButton>\n            <IconButton aria-label=\"share\"  onClick={rejectFriendRequestClicked} >\n              <DoNotDisturbIcon />\n            </IconButton>\n          </CardActions>\n        </Card>\n      </Box>\n    );\n}\n\nexport default SingleFriendRequest;","import React from 'react'\nimport { useAppContext } from './providers/AppContext';\nimport SingleFriendRequest from './SingleFriendRequest';\n\nfunction FriendRequests() {\n\n    const {currentUser}=useAppContext();\n  return (\n    <div>\n        {\n        currentUser.friendRequestsRecieved.map(e => <SingleFriendRequest  key={e.id} friendRequest={e} /> )\n        }\n        </div>\n  )\n}\n\nexport default FriendRequests","import React from 'react'\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FilePicker  } from 'react-file-picker'\nimport { useAppContext } from './providers/AppContext';\nimport Grid from '@mui/material/Grid';\nimport SendIcon from '@mui/icons-material/Send';\n\n\nfunction EditProfil() {\n  const defaultInterests = [\n    { id: \"1\", label: \"Festivals\", users: []},\n    { id: \"2\", label: \"Politik\", users: [] },\n    { id: \"3\", label: \"Sport\" , users: []},\n    { id: \"4\", label: \"Programmieren\", users: [] },\n  ]\n  const defaultLanguages = [\n    { id: \"10001\", label: \"Deutsch\", users: [] },\n    { id: \"10002\", label: \"Englisch\", users: [] },\n    { id: \"10003\", label: \"Spanisch\", users: [] },\n    { id: \"10004\", label: \"Portugiesisch\", users: [] },\n  ]\n  const [selected, setSelected] = React.useState(new Set());\n  const [selectedLang, setSelectedLang] = React.useState(new Set());\n  const [interests, setInterests] = React.useState(defaultInterests);\n  const [languagues, setLanguagues] = React.useState(defaultLanguages);\n  const refInterestInput = React.useRef();\n  const refLanguagueInput = React.useRef();\n  const {uploadImg, verifyWord}=useAppContext(); \n\n  const [image, setImage] = React.useState({ preview: '', data: '' })\n  const [status, setStatus] = React.useState('')\n  \n  const handleClickLanguage=(id) => {\n    // treat state as immutable\n   // React only does a shallow comparison so we need a new Set\n   const newSet = new Set(selectedLang);\n   if (newSet.has(id)) newSet.delete(id);\n   else newSet.add(id);\n   setSelectedLang(newSet);\n }\n  const handleClickInterest=(id) => {\n     // treat state as immutable\n    // React only does a shallow comparison so we need a new Set\n    const newSet = new Set(selected);\n    if (newSet.has(id)) newSet.delete(id);\n    else newSet.add(id);\n    setSelected(newSet);\n  }\n  const newImg = (file) => {\n    console.log(file);\n    let formData = new FormData()\n    formData.append('file', file.data)\n    console.log(formData);\n    uploadImg(file);\n  }\n\n  const addInterest = async () => {\n    if (refInterestInput.current.value !== \"\") {\n\n      const found = interests.find(obj => {\n        return obj.label.toLowerCase() === refInterestInput.current.value.toLowerCase();\n      });\n      console.log(found);\n      if (found === undefined){\n        // Eintrag existiert noch nicht und muss neu angelegt werden\n        let isWord = await verifyWord(refInterestInput.current.value);\n        \n        if (isWord){\n          let newID = uuidv4()\n          setInterests([... interests, { id:newID , label: refInterestInput.current.value}]);\n          handleClickInterest(newID);\n        }\n       \n      }else\n      {\n        console.log(found.id)\n        handleClickInterest(found.id);\n      }\n      }\n      refInterestInput.current.value = \"\";\n  }\nconst addLanguage = async () => {\n  if (refLanguagueInput.current.value !== \"\") {\n    \n    //languagues.find(label: refLanguagueInput.current.value)\n    const found = languagues.find(obj => {\n      return obj.label.toLowerCase() === refLanguagueInput.current.value.toLowerCase();\n    });\n    console.log(found);\n    if (found === undefined){\n      // Eintrag existiert noch nicht und muss neu angelegt werden\n      let isWord = await verifyWord(refLanguagueInput.current.value);\n        \n      if (isWord){\n        let newID = uuidv4()\n        setLanguagues([... languagues, { id:newID , label: refLanguagueInput.current.value}]);\n        handleClickLanguage(newID);\n      }\n    }else\n    {\n      console.log(found.id)\n      handleClickLanguage(found.id);\n    }\n    }\n    refLanguagueInput.current.value = \"\";\n   \n}\n\n  const handleSave = () => {\n    \n  }\n\n  const handleSubmit = async (e) => {\n    console.log(\"handleSubmit\")\n    e.preventDefault()\n    let formData = new FormData()\n    formData.append('file', image.data)\n    uploadImg(formData);\n  }\n\n  const handleFileChange = (e) => {\n    const img = {\n      preview: URL.createObjectURL(e.target.files[0]),\n      data: e.target.files[0],\n    }\n    setImage(img)\n  }\n\n  return (<div>\n            \n              <div>\n                {\n                  interests.map((interest) => (\n                    <Chip\n                      key={interest.id}\n                      onClick={() => handleClickInterest(interest.id)}\n                      variant={selected.has(interest.id) ? \"filled\" : \"outlined\"}\n                      label= {interest.label}\n                    >\n                    </Chip>))\n                }\n                \n              </div>\n              \n             \n              <Grid container style={{padding: '20px'}}>\n                  <Grid item xs={11}>\n                      <TextField id=\"outlined-basic-email\" \n                                  label=\"Type Something\" fullWidth\n                                  inputRef={refInterestInput} />\n                  </Grid>\n                  <Grid  align=\"right\">\n                      <SendIcon onClick={addInterest}/>\n                  </Grid>\n              </Grid>\n\n             \n           \n            \n              <div>\n                {\n                  languagues.map((lang) => (\n                    <Chip\n                      key={lang.id}\n                      onClick={() => handleClickLanguage(lang.id)}\n                      variant={selectedLang.has(lang.id) ? \"filled\" : \"outlined\"}\n                      label= {lang.label}\n                    >   \n                    </Chip>))\n                }\n                \n              </div>\n              <Grid container style={{padding: '20px'}}>\n                  <Grid item xs={11}>\n                      <TextField id=\"outlined-basic-email\" \n                                  label=\"Type Something\" fullWidth\n                                  inputRef={refLanguagueInput} />\n                  </Grid>\n                  <Grid  align=\"right\">\n                      <SendIcon onClick={addLanguage}/>\n                  </Grid>\n              </Grid>\n           \n              <div>\n                <h1>Upload to server</h1>\n                {image.preview && <img src={image.preview} width='100' height='100' />}\n                <hr></hr>\n                <form onSubmit={handleSubmit}>\n                  <input type='file' name='file' onChange={handleFileChange}></input>\n                  <button type='submit'>Submit</button>\n                </form>\n                {status && <h4>{status}</h4>}\n              </div>\n              <FilePicker\n                extensions={['jpg', 'jpeg', 'png']}\n                onChange={FileObject =>newImg (FileObject)}\n              >\n                <button>\n                  Click to upload Image\n                </button>\n              </FilePicker>\n\n             \n\n            <Button onClick={handleSave}>Speichern</Button>\n          </div>\n  )\n}\n\nexport default EditProfil","\nimport { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\"; // Name of the event\nconst SOCKET_SERVER_URL = \"http://localhost:8002\";\n\nconst useChat = (roomId) => {\n  const [messages, setMessages] = useState([]); // Sent and received messages\n  const socketRef = useRef();\n\n  const  backend_getPreviousMessages = async (roomID) => {\n    console.log(\"backend_getPreviousMessages\");\n    var config = {\n          method: 'post',\n          url: '/api/previousMessages',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: roomID    \n        };\n        let response = await axios (config);\n        \n        console.log(response.data);\n        return response.data;\n      }\n\n  useEffect(() => {\n    \n    // Creates a WebSocket connection\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: { roomId },\n    });\n\n    // declare the data fetching function\n    const initMsgs = async () => {\n        console.log(\"initMsgs\");\n        let msgs = await backend_getPreviousMessages({roomId: roomId})\n        console.log(msgs);\n        setMessages(msgs);\n        \n        \n    }\n    // Vorhergehende Messages aus dem Backend laden und in den Chatroom schreiben\n    initMsgs();\n\n    // Listens for incoming messages\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\n      console.log(\"useChat\");\n      console.log(\"socketRef.current.on\");\n      console.log(message[0])\n      setMessages((messages) => [...messages, message[0]]);\n    });\n    \n    // Destroys the socket reference\n    // when the connection is closed\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n\n  // Sends a message to the server that\n  // forwards it to all users in the same room\n  const sendMessage = (messageBody, currentUser) => {\n    let newMsg = {\n        id: uuidv4(),\n        senderID: currentUser.id,\n        from: currentUser.userName, \n        text: messageBody,\n        date: new Date()\n      };\n\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, [newMsg, roomId]);\n  };\n\n  return { messages, sendMessage };\n};\n\nexport default useChat;","\nimport React from \"react\";\nimport { useParams, Redirect  } from \"react-router-dom\";\nimport useChat from \"./hooks/useChat\";\nimport { useAppContext } from './providers/AppContext';\n\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport SendIcon from '@mui/icons-material/Send';\n\nconst WebsocketChatroom = (props) => {\n  const { roomId } = useParams();\n  const {currentUser}=useAppContext();\n\n  const { messages, sendMessage } = useChat(roomId); // Creates a websocket and manages messaging\n  const [newMessage, setNewMessage] = React.useState(\"\"); // Message to be sent\n  const inputRefMessage= React.useRef (null);\n\n\n\n\n  const handleSendMessage = () => {\n    if (inputRefMessage.current.value !== \"\")\n        sendMessage(inputRefMessage.current.value, currentUser);\n  };\n\n  return (  \n    <Grid container>\n        <Grid item xs={3} >\n            <List>\n              {\n                messages.map((msg)=>\n                <ListItem  key={msg.id}>  \n                    {\n                    msg.senderID === currentUser.id \n                    ? <ListItemText align=\"right\" primary={msg.text}>{msg.text}</ListItemText>\n                    : <ListItemText align=\"left\" primary={msg.text}>{msg.text}</ListItemText>\n                    }\n                </ListItem>) \n              }              \n            </List>\n        </Grid>\n            <Grid container style={{padding: '20px'}}>\n                <Grid item xs={11}>\n                    <TextField id=\"outlined-basic-email\" \n                            label=\"Type Something\" fullWidth\n                            inputRef={inputRefMessage} />\n                </Grid>\n            <Grid  align=\"right\">\n                <SendIcon onClick={handleSendMessage}/>\n            </Grid>\n        </Grid>\n    </Grid>\n/*\n    <div className=\"chat-room-container\">\n      <h1 className=\"room-name\">Room: {roomId}</h1>\n      <div className=\"messages-container\">\n        <ol className=\"messages-list\">\n          \n          \n          {messages.map((message, i) => (\n            <li\n              key={i}\n              className={`message-item ${\n                message.from === currentUser.id ? \"my-message\" : \"received-message\"\n              }`}\n            >\n              {message.text}\n            </li>\n          ))}\n        </ol>\n      </div>\n      <textarea\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        placeholder=\"Write message...\"\n        className=\"new-message-input-field\"\n      />\n      <button onClick={handleSendMessage} className=\"send-message-button\">\n        Send\n      </button>\n    </div>*/\n  );\n};\n\nexport default WebsocketChatroom;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport { useGeolocated } from \"react-geolocated\";\n\nexport default function DialogNewChatRoom() {\n  const [open, setOpen] = React.useState(false);\n  const refSaveGPSdata =React.useRef (false);\n  const { coords, isGeolocationAvailable, isGeolocationEnabled } =\n  useGeolocated({\n      positionOptions: {\n          enableHighAccuracy: false,\n      },\n      userDecisionTimeout: 5000,\n  });\n  const handleClickChip = () => {\n    console.info('You clicked the Chip.');\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        neuen Chatroom erstellen\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Neuen Chatroom erstellen</DialogTitle>\n        <DialogContent>\n          <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Name der Gruppe\"\n              fullWidth\n              variant=\"standard\"\n            />\n          <FormGroup>\n            <FormControlLabel control={<Switch defaultChecked />} label=\"privat\" />\n            {isGeolocationEnabled \n            ? <FormControlLabel control={<Switch inputRef={refSaveGPSdata}/>} label=\"GPS-Daten speichern\" />             \n            : \"Der Browser unterstützt keine Geo-Location\"\n            }\n            \n          </FormGroup>\n          {coords !== undefined && refSaveGPSdata.current.value ===true\n            ? <DialogContentText>\n                \"Koordinaten: Latitude:\" {coords.latitude} \" Longitude: \" {coords.longitude}\n              </DialogContentText>\n            : null\n           }\n            <DialogContentText>Interessen der Gruppe</DialogContentText>\n            <Stack>\n              <Chip label=\"Festivals\" variant=\"outlined\" onClick={handleClickChip} />\n              <Chip label=\"Politik\" variant=\"outlined\" onClick={handleClickChip} />\n              <Chip label=\"Sport\" variant=\"outlined\" onClick={handleClickChip} />\n              <Chip label=\"Programmieren\" variant=\"outlined\" onClick={handleClickChip} />\n              <TextField label=\"neue Interessen hinzufügen\"></TextField>\n            </Stack>\n          \n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Abbrechen</Button>\n          <Button onClick={handleClose}>Gruppe erstellen</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Zoom from '@mui/material/Zoom';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport UpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport { green } from '@mui/material/colors';\nimport Box from '@mui/material/Box';\nimport { useAppContext } from './providers/AppContext'\nimport { Link } from \"react-router-dom\";\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogNewChatRoom from \"./DialogNewChatRoom\";\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Tooltip from '@mui/material/Tooltip';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`action-tabpanel-${index}`}\n      aria-labelledby={`action-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    'aria-controls': `action-tabpanel-${index}`,\n  };\n}\n\nconst fabStyle = {\n  position: 'absolute',\n  bottom: 16,\n  right: 16,\n};\n\nconst fabGreenStyle = {\n  color: 'common.white',\n  bgcolor: green[500],\n  '&:hover': {\n    bgcolor: green[600],\n  },\n};\n\nexport default function ChatSelection() {\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n  const {currentUser}=useAppContext();\n\n  const [roomName, setRoomName] = React.useState(\"\");\n  const [chatPartner, setChatPartner] = React.useState(\"\");\n  const handleRoomNameChange = (friendshipt) => {\n    setRoomName(friendshipt.id);  \n    setChatPartner(friendshipt.userName)\n  };\n\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\n  const fabs = [\n    {\n      color: 'primary',\n      sx: fabStyle,\n      icon: <Tooltip title= \"Neue Gruppe erstellen\"><AddIcon /></Tooltip> ,\n      label: 'Add',\n      tooltip: 'Gruppe hinzufügen'\n    },\n    {\n      color: 'secondary',\n      sx: fabStyle,\n      icon: <EditIcon />,\n      label: 'Edit',\n    },\n    {\n      color: 'inherit',\n      sx: { ...fabStyle, ...fabGreenStyle },\n      icon: <UpIcon />,\n      label: 'Expand',\n    },\n  ];\n\n  return (\n    <Box\n      sx={{\n        bgcolor: 'background.paper',\n        width: 500,\n        position: 'relative',\n        minHeight: 200,\n      }}\n    >\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"action tabs example\"\n        >\n          <Tab label=\"Freunde und meine Gruppen\" {...a11yProps(0)} />\n          <Tab label=\"Öffentliche Gruppen \" {...a11yProps(1)} />\n          <Tab label=\"Gruppen in der Nähe\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n        <Grid item xs={3} >\n                <List>\n                    {\n                    currentUser.friends.length> 0\n                    ?\n                    currentUser.friends.map((e)=>\n                    \n                    <ListItem button key={e.userName} onClick={() => handleRoomNameChange(e)}>                        \n                        <ListItemText primary={e.userName}>{e.userName}</ListItemText>\n                    </ListItem>) \n                    : \"Freunde hinzufügen, um zu chatten\"}                   \n                </List>\n            </Grid>\n            <DialogNewChatRoom />\n        {\n        roomName !== \"\" \n        ?\n        <Link to={`/chatroom/${roomName}`} className=\"enter-room-button\">\n            öffne Chat mit {chatPartner}\n        </Link>\n        : null\n        }\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          Öffentliche Gruppen \n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          Gruppen in der Nähe\n        </TabPanel>\n      </SwipeableViews>\n      {fabs.map((fab, index) => (\n        <Zoom\n          key={fab.color}\n          in={value === index}\n          timeout={transitionDuration}\n          style={{\n            transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n          }}\n          unmountOnExit\n        >\n          <Fab sx={fab.sx} aria-label={fab.label} color={fab.color}>\n            {fab.icon}\n          </Fab>\n        </Zoom>\n      ))}\n    </Box>\n  );\n}\n","import React from 'react'\n\nimport './App.css'\nimport Grid from '@mui/material/Grid';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Register from './components/inner components/Register';\n//import Content from './components/Content'\nimport Header from './components/Header'\nimport Feed from './components/inner components/Feed'\nimport Sidebar from './components/inner components/Sidebar'\nimport Footer from './components/Footer'\nimport SinglePost from './components/SinglePost'\nimport Profil from './components/Profil'\nimport Login from './components/inner components/Login';\nimport { AppContextProvider } from './components/providers/AppContext';\nimport FriendRequests from './components/FriendRequests';\nimport EditProfil from './components/EditProfil';\nimport WebsocketChatroom from \"./components/WebsocketChatroom\";\nimport ChatSelection from './components/ChatSelection';\n\n\nfunction App() {\n\n  \n  \n\n\n  return (\n    \n    <AppContextProvider>   \n      <BrowserRouter>\n      \n        <Grid container rowSpacing={2} columnSpacing={2} irection=\"row\" justifyContent=\"center\" alignItems=\"center\"   >\n            <Grid item xs={12}   >\n              <Header> </Header>\n            </Grid>       \n          <Grid item xs={12} sm={5} md={5} lg={5}>\n            <Routes>\n              <Route path =\"/\" element={<Feed />} />\n              <Route path=\"post/:postID\" element={<SinglePost />} />\n              <Route path =\"/register\" element={<Register />} />\n              <Route path =\"/login\" element={<Login />} />\n              <Route path=\"profil/:userName\" element={<Profil />} />\n              <Route path=\"/freundschaftsanfragen\" element={<FriendRequests />} />\n              <Route path=\"/chat\" element={<ChatSelection />} />\n              <Route path=\"/chatroom/:roomId\" element={<WebsocketChatroom />}/>\n              <Route path=\"/editProfil\" element={<EditProfil />} />\n            </Routes>\n          </Grid>          \n          <Grid item xs={12} sm={3} md={3} lg={3}   >\n            <Sidebar></Sidebar>\n          </Grid>      \n          <Grid item xs={12} lg={12} >\n            <Footer></Footer>\n          </Grid>        \n        </Grid>\n        \n      </BrowserRouter>\n    </AppContextProvider>\n  \n    \n   \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}